---
title: "Types of Health Data"
format: html
---

When we are interacting with data sources for our analysis, we need to be aware of the different types of data that we may encounter.

We will mainly be using CSV files in this course but it's useful to know about other formats that you may come across.

The following are some examples of the common types of data along with some code snippets illustrating how you would use them. You don't need to remember all of these snippets but you will certainly come across them one day!

## CSV (Comma Separated Values)

CSV files are the most common format for storing tabular data, particularly in this course. They are simple text files that use commas to separate values. Each line in the file represents a row of data, and each value in the row is separated by a comma. CSV files can be easily imported into RStudio using the `read_csv` function in the `readr` package (also included in Tidyverse package which we will cover later).

The examples below use code that you may not be familiar with. Don't worry! You will soon be using very similar code.

#### Example

``` r
library(readr)
data <- read_csv("data.csv")
```

## TSV (Tab Separated Values)

Similar to CSV files, TSV files use tabs to separate values instead of commas. They are also simple text files that can be easily imported into RStudio using the `read_tsv` function in the `readr` package.

#### Example

``` r
library(readr)
data <- read_tsv("data.tsv")
```

## JSON (JavaScript Object Notation)

JSON is a lightweight data interchange format that is easy for humans to read and write, and easy for machines to parse and generate. JSON files are often used to store structured data, such as data from APIs (Application Programming Interfaces).

Don't worry if you don't know what an API or JavaScript are. JSON files can be imported into RStudio using the `fromJSON` function in the `jsonlite` package.

#### Example

``` r
library(jsonlite)
data <- fromJSON("example-json-data.json")
```

::: {.callout-tip icon="false" collapse="true"}
## JSON example (click to view)

JSON (JavaScript Object Notation) is a lightweight, text-based format used to store and semi-structured data between systems. It is especially common in web applications, but is not limited to the Javascript language. It uses a key-value pair structure, which makes it fairly human friendly easy machines to parse.

The example here shows the key-value structure, and also the element can be (sometime very deeply) nested. The coloured boxes show the value for one key can be a list of values, or even a nested list (see first box).

<iframe src="example-json-data.html" width="550px" height="500px" style="border: solid #ddd 1px">

</iframe>
:::

## Databases

Databases are structured collections of data that can be accessed and managed using a database management system (DBMS). There are many types of databases, including relational databases (e.g., MySQL, PostgreSQL) and NoSQL databases (e.g., MongoDB, Cassandra).

### Example

``` r
library(DBI)
library(RSQLite)
con <- dbConnect(RSQLite::SQLite(), "database.db")
data <- dbGetQuery(con, "SELECT * FROM table_name")
dbDisconnect(con)
```

## What types of data are used in health research?

The datasets used by health data scientists comes from lots of different sources. Read [this short document](https://www.hdruk.ac.uk/access-to-health-data/open-science-open-code/types-of-health-data-we-use/) from [Health Data Research UK](https://www.hdruk.ac.uk/) that describes some of the most common types of data used in health research such as patient data and data from samples.
