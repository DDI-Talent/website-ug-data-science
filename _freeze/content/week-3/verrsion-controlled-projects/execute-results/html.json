{
  "hash": "3bfbc1b23320d38a109f20e9436181f5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R Notebook\"\n---\n\n\n## 1. Accessing GitHub Repositories\n\n- Navigate to the repositories tab in your GitHub account\n  - See @fig-repos-tab\n  \n![](images/git-r/01-repos-tab.png){#fig-repos-tab}\n\n## 2. Creating a New Repository on GitHub\n\n- Click the button to create a new repository\n  - See @fig-new-repo-button\n\n![](images/git-r/02_new-repo-button.png){#fig-new-repo-button}\n\n- Enter repository details\n  - Specify the repository name\n    - See @fig-name-repo\n\n![](images/git-r/03_name-repo.png){#fig-name-repo}\n  \n  - Configure initialization options (e.g., description, README, .gitignore)\n    - See @fig-init-repo\n\n![](images/git-r/04_init-repo.png){#fig-init-repo}\n\n- Finalize repository creation\n  - Complete the process to have the repository ready\n    - See @fig-create-repo\n\n![](images/git-r/05_create-repo.png){#fig-create-repo}\n\n## 3. Preparing to Clone the Repository\n\n- Copy the remote git repository clone link \n  - See @fig-get-clone-link\n\n![](images/git-r/06-get-clone-link.png){#fig-get-clone-link}\n\n- Create a local directory on your computer to contain the repository\n  - See @fig-create-local-repo-dir\n\n![](images/git-r/06_create-local-repo-dir.png){#fig-create-local-repo-dir}\n\n## 4. Cloning the Repository Locally Using the Terminal\n\n- Use the terminal to clone the remote repository into the local directory\n  - See @fig-clone-repo\n  \n![](images/git-r/08_clone-repo.png){#fig-clone-repo}\n\n## 5. Setting Up the Project in RStudio\n\n- Open RStudio and select to open an existing directory\n  - See @fig-existing-dir\n  \n![](images/git-r/09_existing-dir.png){#fig-existing-dir}\n\n- Create a new RStudio project using the existing directory\n  - See @fig-create-project\n\n![](images/git-r/10_create-project.png){#fig-create-project}\n\n## 6. Confirming Git Version Control in RStudio\n\n- Ensure the project is tracked by Git (Git tab and icon visible)\n  - See @fig-git-tracked-project\n\n![](images/git-r/11_git-tracked-project.png){#fig-git-tracked-project}\n\n- Familiarize with the Git pane in RStudio for version control operations\n  - See @fig-git-pane\n\n![](images/git-r/12_git-pane.png){#fig-git-pane}\n\n## 7. Committing and Pushing Changes\n\n- Stage changes and make your first commit using the Git pane\n  - See @fig-first-commit\n\n![](images/git-r/13_first-commit.png){#fig-first-commit}\n\n- Commit and push your changes to the remote GitHub repository\n  - See @fig-first-commit-and-push\n\n![](images/git-r/14_first-commit-and-push.png){#fig-first-commit-and-push}\n\n- Confirm commit was successful within RStudio\n  - See @fig-commit-success\n\n![](images/git-r/15_commit-success.png){#fig-commit-success}\n\n- Confirm push to the remote repository was successful\n  - See @fig-push-success\n\n![](images/git-r/16_push-success.png){#fig-push-success}\n\n## 8. Pulling Remote Changes\n\n- Pull updates from the remote GitHub repository to your local project\n  - See @fig-pull-success\n\n![](images/git-r/17_pull-success.png){#fig-pull-success}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndir('images/git-r/git-r/') |> \n  cat(sep = \"\\n\")\n```\n:::\n\n\n\nCreate an outline for a document giving instructions for creating a version-controlled project using Git and RStudio. \nYour response should be markdown formatted, wrapped in four backticks.\nFollow the flow from the image file names provided. \n\nIn github...\n\n01-repos-tab.png\n02_new-repo-button.png\n03_name-repo.png\n04_init-repo.png\n05_create-repo.png\n06-get-clone-link.png\n06_create-local-repo-dir.png\n\nIn terminal...\n08_clone-repo.png\n\nIn rstudio...\n09_existing-dir.png\n10_create-project.png\n11_git-tracked-project.png\n12_git-pane.png\n13_first-commit.png\n14_first-commit-and-push.png\n15_commit-success.png\n16_push-success.png\n17_pull-success.png",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}