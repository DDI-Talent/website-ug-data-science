{
  "hash": "a440c2417f0ac72f236d36f6d676ad77",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Importing Data\"\nformat: html\n---\n\n## How to import data?\n\nWe will be using one of the datasets available from [Public Health Scotland](https://www.opendata.nhs.scot/), called [Cancelled Planned Operations by Health Board](https://www.opendata.nhs.scot/dataset/cancelled-planned-operations/resource/0f1cf6b1-ebf6-4928-b490-0a721cc98884).\n\nHere are the functions we'll be covering in the the videos:\n\n-   base::library() we're already familiar with for loading packages\n-   readr::read_csv() for importing CSV files\n-   here::here() is a function that helps R find files\n-   readxl::read_excel() for importing Excel files\n\n![](images/here.png){fig-alt=\"Cartoon illustrating the here function\"}\n\n[artwork by Allison Horst](https://twitter.com/allison_horst?lang=en)\n\n*Note: The word before the :: is the name of the package and the word after the :: is the name of a function from that package, in the format: package::function()*\n\n## CSV Files\n\nWatch the following video to find out how to import CSV files using R code and also using the import wizard, with some extra tips to help you deal with dates.\n\nIf you want to recreate the session in the video on your own computer, you can download the **cancelled_operations** project folder here: [cancelled_operations.zip](/documents/week-2/cancelled_operations.zip) *Note: To open the project, make sure to \"unzip\" or \"extract all\" from the folder, before clicking on the cancelled_operations.Rproj file to open the project in RStudio.*\n\n*Alternatively, here are the individual files, but to recreate the file structure, you will need to create your own RStudio project and within this a \"data\" folder to store examples 2, 3 and 4 in, for the examples to work:*\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'downloadthis' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<a href=\"./files/phs_cancelled1.csv\">\n<button class=\"btn btn-danger\"><i class=\"fa fa-save\"></i> phs_cancelled1.csv</button>\n</a>\n```\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<a href=\"/documents/week-2/phs_cancelled2.csv\">\n<button class=\"btn btn-danger\"><i class=\"fa fa-save\"></i> phs_cancelled2.csv</button>\n</a>\n```\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<a href=\"/documents/week-2/phs_cancelled3.csv\">\n<button class=\"btn btn-danger\"><i class=\"fa fa-save\"></i> phs_cancelled3.csv</button>\n</a>\n```\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<a href=\"/documents/week-2/phs_cancelled4.csv\">\n<button class=\"btn btn-danger\"><i class=\"fa fa-save\"></i> phs_cancelled4.csv</button>\n</a>\n```\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n[![](images/Screenshot%202025-05-26%20at%2014.39.46.png){fig-alt=\"How to import CV files\"}](https://cdnapisec.kaltura.com/p/2010292/sp/201029200/embedIframeJs/uiconf_id/32599141/partner_id/2010292?iframeembed=true&playerId=kaltura_player&entry_id=1_ntwi93hq&flashvars%5BstreamerType%5D=auto&flashvars%5BlocalizationCode%5D=en&flashvars%5BleadWithHTML5%5D=true&flashvars%5BsideBarContainer.plugin%5D=true&flashvars%5BsideBarContainer.position%5D=left&flashvars%5BsideBarContainer.clickToClose%5D=true&flashvars%5Bchapters.plugin%5D=true&flashvars%5Bchapters.layout%5D=vertical&flashvars%5Bchapters.thumbnailRotator%5D=false&flashvars%5BstreamSelector.plugin%5D=true&flashvars%5BEmbedPlayer.SpinnerTarget%5D=videoHolder&flashvars%5BdualScreen.plugin%5D=true&flashvars%5BKaltura.addCrossoriginToIframe%5D=true&&wid=0_bb2s1o4d)\n\nDownload the video transcript link [here](/documents/week-2/Importing%20CSV%20Files.docx).\n\n### Uncommon File Formats\n\nIn the video on how to import CSV files above, we show you how to use the import wizard to provide a preview of how R might read in your file.\n\nThe example CSV file we are using is in the common format where values are separated by commas, but as mentioned briefly in the video, if your file uses a different delimeter (separator), for example, **dots** or **spaces** or **semi-colons**, you can specify this in the import options of the wizard.\n\n### Excel Files\n\nWatch the following video to find out how to import Excel files using R code and also using the import wizard.\n\nIf you want to recreate the session in the video on your own computer, you can download the **cancelled_operations** project folder here: [cancelled_operations_excel.zip](/documents/week-2/cancelled_operations_excel.zip) *Note: To open the project, make sure to \"unzip\" or \"extract all\" from the folder, before clicking on the cancelled_operations.Rproj file to open the project in RStudio.*\n\n*Alternatively, here is the individual file, but to recreate the file structure, you will need to create your own RStudio project and within this a \"data\" folder to store the file for it to work [phs_cancelled.xlsx](/documents/week-2/phs_cancelled.xlsx)*\n\n[![](images/Screenshot%202025-05-26%20at%2015.19.47.png){fig-alt=\"Import excel files video\"}](https://cdnapisec.kaltura.com/p/2010292/sp/201029200/embedIframeJs/uiconf_id/32599141/partner_id/2010292?iframeembed=true&playerId=kaltura_player&entry_id=0_7k3z7x1a&flashvars%5BstreamerType%5D=auto&flashvars%5BlocalizationCode%5D=en&flashvars%5BleadWithHTML5%5D=true&flashvars%5BsideBarContainer.plugin%5D=true&flashvars%5BsideBarContainer.position%5D=left&flashvars%5BsideBarContainer.clickToClose%5D=true&flashvars%5Bchapters.plugin%5D=true&flashvars%5Bchapters.layout%5D=vertical&flashvars%5Bchapters.thumbnailRotator%5D=false&flashvars%5BstreamSelector.plugin%5D=true&flashvars%5BEmbedPlayer.SpinnerTarget%5D=videoHolder&flashvars%5BdualScreen.plugin%5D=true&flashvars%5BKaltura.addCrossoriginToIframe%5D=true&&wid=0_6ew6t4t1)\n\nDownload the video transcript link [here](/documents/week-2/Importing%20Excel%20files.docx).\n\n*Note: the readxl package was developed fairly recently so if you are searching on the internet to find solutions to problems reading in Excel files, make sure to include the package name, or limit the time range.*\n\n### Open Data\n\nOpen data refers to information made freely available to the general public and can be **used by anyone for any purpose**. The government and other public bodies such as the NHS are increasingly making datasets available to the public on the web.\n\n## Benefits of sharing\n\nThere are many benefits to opening up healthcare data to the public, including greater transparency and the empowerment of patients to be more involved in their own healthcare. But perhaps more importantly still, these datasets are a rich source of information which data scientists and analysts from around the world can tap into in order to improve our understanding of health and disease. After all, **Data Saves Lives**!\n\n### Show me more data!\n\nThroughout this course, we are using open data freely available from the [Public Health Scotland website](https://www.opendata.nhs.scot/), but there are many other excellent sources of open data available online too, here are a few:\n\n-   [NHS Open Data Portal:](https://opendata.nhsbsa.net/dataset) launched in March 2020 to improve access to healthcare data\n\n-   [WHO:](https://www.who.int/data/gho) datasets based on global health priorities\n\n-   [Kaggle:](https://www.kaggle.com/datasets) a whole variety of topics, not just healthcare, excellent for practicing on\n\n-   [UK Government:](https://data.gov.uk/) contains nearly 25,000 data sets from all central government departments and a number of other public sector bodies and local authorities\n\n-   [UK Data Archive:](https://www.data-archive.ac.uk/) larger datasets\n\n-   [Global Burden of Disease:](http://ghdx.healthdata.org/gbd-2017) a catalog of surveys, censuses, vital statistics, and other global health-related data\n\nLet's look at how we can import data from the web directly from inside RStudio.\n\n### Recap Download and Import\n\nThe open data we're going to import is one you'll be very familiar with by now, from the Public Health Scotland website. It can be found at the following link:\n\n[www.opendata.nhs.scot/dataset/cancelled-planned-operations](www.opendata.nhs.scot/dataset/cancelled-planned-operations)\n\nAs you can see from the screenshot below, the CSV files can be manually downloaded from the website.\n\n![](images/csv_download.jpeg)\n\nIn order to start looking at them in R, you would then have to save your file to a relevant folder on your computer, then from within R, call on the file using the read_csv() command, making sure to include the correct path location.\n\nThis is what we did when learning how to read in CSV files from our computer (see the *Import CSV* video above). Let's just remind ourselves of how we did this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the tidyverse  \nlibrary(tidyverse) \n\nread_csv(\"data/phs_cancelled.csv\")\n```\n:::\n\n\n### Import CSV files directly from the web\n\nThe great news is that you can save time by extracting the data directly from the website using R. The code for this should look very familiar to you as this is the method we have been using frequently in many of the examples. There is no need to download the data first.\n\nTry running the following code in your RStudio environment, where instead of a folder and file name as our argument, we have the URL address from the website.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n library(tidyverse)\n \n # Import the open data csv file on cancelled operations\n read_csv(\"https://www.opendata.nhs.scot/dataset/479848ef-41f8-44c5-bfb5-666e0df8f574/resource/0f1cf6b1-ebf6-4928-b490-0a721cc98884/download/cancellations_by_board_february_2022.csv\")\n```\n:::\n\n\n*Note: You can copy the URL address by right-clicking on the download option and selecting \\*\\*Copy link address. See screenshot below:*\n\n![](./images/link_address.png)\n\n##### How does it know?\n\nHow are we able to use the same command to extract data from our own local computer or from a remote web page? R is clever enough to be able to work out what you want. If it **detects** that you have used a **URL**, it carries out a different underlying operation than if you had included a local file path.\n\n### Stay up to date\n\nExtracting the data directly from the website, means that if the underlying dataset on the website is updated, you will be able to quickly rerun the code to immediately update your own analysis in R too.\n\nIn the code above we imported the data but we didn't save the result as an object. If we want to carry on exploring this data we need to store the result.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n # Load the tidyverse  \n library(tidyverse) \n \n # Store the open data csv file as \"cancelled_ops\"\n cancelled_ops <- read_csv(\"https://www.opendata.nhs.scot/dataset/479848ef-41f8-44c5-bfb5-666e0df8f574/resource/0f1cf6b1-ebf6-4928-b490-0a721cc98884/download/cancellations_by_board_february_2022.csv\")\n \n # Print \"cancelled_ops\" in order to view it \n cancelled_ops \n \n dim(cancelled_ops)\n```\n:::\n\n\nRemember, if you store or save an object to your environment, R doesn't immediately display the output but it is saved for future reference. On the other hand, if you run code without saving it as an object, you will see the output immediately, but it won't be saved for future reference.\n\nIn the code above, we have first saved the object, and then \"printed\" it too so that we can view the output immediately.\n\n### Databases\n\nThere are various R packages designed to help you connect to different types of databases. We don't have time to cover these in this course but if you would like to find out more, here are a few pointers:\n\n-   for MySQL databases have a look at the RMySQL package\n\n-   for PostgresSQL, the RPostgresSQL package\n\n-   for Oracle, the ROracle package\n\nYou get the idea!\n\nYou will also need to have a look at the DBI package which will allow you to access and interrogate your database.\n\n## Practice\n\nHere is the link to a dataset on the delivery methods for births in Scottish hospitals from the Public Health Scotland open data store:\n\n[Births in Scottish hospitals](https://www.opendata.nhs.scot/dataset/births-in-scottish-hospitals/resource/8654b6d8-9765-4ced-8e9b-4611aa4596eb)\n\n**Try reading in the data in RStudio, by using `read_csv()`**\n",
    "supporting": [
      "topic-2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/font-awesome-6.5.2/js/script.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}