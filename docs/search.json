[
  {
    "objectID": "course-information/course-contacts.html",
    "href": "course-information/course-contacts.html",
    "title": "Course Contacts",
    "section": "",
    "text": "Course Organiser\nDr Kasia Banas\nEmail: Kasia.Banas@ed.ac.uk\n\n\nCourse Secretary\nMr Stewart Smith\nEmail: stewart3.smith@ed.ac.uk\n\n\nTeaching staff\nKarim Rivera-Lares (karim.rivera-lares@ed.ac.uk)"
  },
  {
    "objectID": "course-information/index.html",
    "href": "course-information/index.html",
    "title": "Course Information",
    "section": "",
    "text": "Course Name: Data Science for Health and Biomedical Sciences\nCourse Code: BIME10076\nSCQF Credits: 20\nLink to course on DRPS: http://www.drps.ed.ac.uk/24-25/dpt/cxbime10076.htm\n\nCourse Handbook\nData Science 2024-25 Handbook_FINAL.docx\n\n\nCourse Outline\nThe course aims to provide a broad introduction to data science in health and biomedical sciences, covering key concepts and principles, data analysis skills and implications of working with biomedical and healthcare data. Key topics in the course include: types of human health data; computational methods (e.g. process modelling and machine learning); data wrangling, analysis and reporting using the R programming language; legal considerations and bias in health data. This course is delivered in a flipped classroom format: it is based around short pre-recorded videos, which are complemented with readings and self-guided programming tasks. The students also have a weekly in-person tutorial, which provides an opportunity for further improvement of their programming practice and discussion of the core concepts. We will also offer weekly quizzes to provide the students with valuable formative feedback.\nLearning Outcomes\nOn completion of this course, the student will be able to:\n\nApply a range of specialised data science techniques to different medical and healthcare scenarios.\nAnalyse health and biomedical data with the use of the R programming language, including summarisation, visualisation and interpretation.\nCritically examine the ethical, societal and regulatory principles and implications of data science in health.\nExplain and critically discuss key concepts, principles and methods of data science in health.\n\nRecommended Reading & Resources\nThere is no compulsory course text.\nHowever, we recommended:\n\nR for Health Data Science (free online) by Ewen Harrison and Riinu Pius\nR for Data Science (free online) by Hadley Wickham, Mine Cetinkaya-Rundel and Garrett Grolemund\nValue Sensitive Design by Batya Friedman and David G. Hendry (available from the Library)\n\n\n\nTimetable\nYou can find class times for this course via your University of Edinburgh calendar (links open in a new window):\n\nView your calendar in Office 365\nInformation about Student Timetables\n\nEssential Course Guide\nThis is general information that applied to all BMTO courses.\nhttps://www.ed.ac.uk/biomedical-sciences/bmto/bmto-undergraduate-students/academic-guidance-and-support/academic-guidance/student-guide/biomedical-sciences-undergraduate-student-handbook\nCourse Handbook\nYou can find the course handbook here (PDF and docx versions) -&gt; https://github.com/DDI-Students/data-science-for-health-bms-24-25/blob/main/documents/. To download it, click “Download raw file” at the top right."
  },
  {
    "objectID": "course-information/help-and-support.html",
    "href": "course-information/help-and-support.html",
    "title": "Help and Support",
    "section": "",
    "text": "Details on:\n\nHelp/support using Learn and other University systems\nBMTO Policies and Guidance\nCentral University Support\nStudent Rep Information\nCareers information\n\nhttps://www.ed.ac.uk/biomedical-sciences/bmto/bmto-undergraduate-students/academic-guidance-and-support/academic-guidance/student-guide"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "content/week-1/topic-4.html",
    "href": "content/week-1/topic-4.html",
    "title": "Topic 4: Getting Started with R",
    "section": "",
    "text": "In case you don’t already have R and RStudio installed, follow the instructions here to get set up. If you already have R and RStudio installed, you can skip this.",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Topic 4: Getting started with R"
    ]
  },
  {
    "objectID": "content/week-1/topic-4.html#rstudio-interface",
    "href": "content/week-1/topic-4.html#rstudio-interface",
    "title": "Topic 4: Getting Started with R",
    "section": "",
    "text": "Now that you have access to RStudio you can start using it to experiment with the exercises we cover this week. Throughout the materials, there are chunks of code for you to run. Try copying the code from these chunks directly into RStudio to reproduce the examples and continue your explorations. It is through experimentation that we learn most effectively.\nAs a quick reminder, the image below shows you where to go to open up a new script in RStudio. Then you can start writing your own code and running it.",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Topic 4: Getting started with R"
    ]
  },
  {
    "objectID": "content/week-1/topic-2.html",
    "href": "content/week-1/topic-2.html",
    "title": "Topic 2: The Role of Ethics in Health and Social Caretopic-2",
    "section": "",
    "text": "Ethics can be defined as a discipline that systematically conceptualises, defines and defends ideas of right and wrong, good and bad. It is the means by which we evaluate actions, behaviours, attitudes, characteristics or state of affairs as good or bad. There are many philosophical lenses and frameworks which are applied to ethical approaches in health and social care.\n\n\n\nEthics in Health and Social Care\n\n\nOn a practical level, the Health Research Authority protects and promotes the interests of patients and the public in health and social care research. One of their core functions is to promote ethical review for research in the NHS in Scotland. Research Ethics Committees (REC) are based in geographical Health Boards receiving applications via IRAS (Integrated Research Application Service). All universities will also have their own version of ethical review panel acting as a precursor to seeking HRA approval. The recently formed Research Data Scotland (RDS) has a mission ‘to improve the economic, social and environmental wellbeing in Scotland by enabling access to and linkage of data about people, places and businesses for research in the public good’. RDS have established ‘partnership with Scottish Government, Scotland’s leading academic institutions and Public Health Scotland to facilitate insight from public sector data and promote and advance health and social wellbeing in Scotland’. Safe Havens, including virtual options, are in place for researchers to access public datasets under supervision with ethical review already in place.",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Topic 2: The Role of Ethics in Health and Social Care"
    ]
  },
  {
    "objectID": "content/week-1/topic-2.html#overview",
    "href": "content/week-1/topic-2.html#overview",
    "title": "Topic 2: The Role of Ethics in Health and Social Caretopic-2",
    "section": "",
    "text": "Ethics can be defined as a discipline that systematically conceptualises, defines and defends ideas of right and wrong, good and bad. It is the means by which we evaluate actions, behaviours, attitudes, characteristics or state of affairs as good or bad. There are many philosophical lenses and frameworks which are applied to ethical approaches in health and social care.\n\n\n\nEthics in Health and Social Care\n\n\nOn a practical level, the Health Research Authority protects and promotes the interests of patients and the public in health and social care research. One of their core functions is to promote ethical review for research in the NHS in Scotland. Research Ethics Committees (REC) are based in geographical Health Boards receiving applications via IRAS (Integrated Research Application Service). All universities will also have their own version of ethical review panel acting as a precursor to seeking HRA approval. The recently formed Research Data Scotland (RDS) has a mission ‘to improve the economic, social and environmental wellbeing in Scotland by enabling access to and linkage of data about people, places and businesses for research in the public good’. RDS have established ‘partnership with Scottish Government, Scotland’s leading academic institutions and Public Health Scotland to facilitate insight from public sector data and promote and advance health and social wellbeing in Scotland’. Safe Havens, including virtual options, are in place for researchers to access public datasets under supervision with ethical review already in place.",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Topic 2: The Role of Ethics in Health and Social Care"
    ]
  },
  {
    "objectID": "content/index.html",
    "href": "content/index.html",
    "title": "Readings, videos and exercises",
    "section": "",
    "text": "Each week, you will be given a set of readings, videos and exercises to complete. These are designed to help you understand the material and to prepare you for the tutorials and assignment.\nIn-person tutorials will be held on Thursday and Friday afternoons from 2-5pm. During the tutorials you will work in pairs to complete coding exercises together. This is called pair programming and is an effective and fun way to learn to code. The tutorials are an important part of the course and you are expected to attend.\nIt is important to complete the material before the tutorials, as the exercises will build on the material covered in the videos and readings. The tutorials will be a chance to ask questions and to get help with the exercises.",
    "crumbs": [
      "Content",
      "Readings, videos and exercises"
    ]
  },
  {
    "objectID": "content/index.html#quiz",
    "href": "content/index.html#quiz",
    "title": "Readings, videos and exercises",
    "section": " Quiz",
    "text": "Quiz\nThere will be a quiz at the beginning of each tutorial to informally test your understanding of the material and discuss in your pairs.",
    "crumbs": [
      "Content",
      "Readings, videos and exercises"
    ]
  },
  {
    "objectID": "content/index.html#homework",
    "href": "content/index.html#homework",
    "title": "Readings, videos and exercises",
    "section": " Homework",
    "text": "Homework\nOn some weeks, there will be a homework exercise that you can complete on your own for practice. These won’t be marked, but they will be a good way to practice the material and to prepare for the assignment.\nNote: The content will be released weekly",
    "crumbs": [
      "Content",
      "Readings, videos and exercises"
    ]
  },
  {
    "objectID": "content/index.html#weekly-topics",
    "href": "content/index.html#weekly-topics",
    "title": "Readings, videos and exercises",
    "section": "Weekly Topics:",
    "text": "Weekly Topics:\n Week 1: Introduction\n Week 2: Data Tidying and Wrangling\n Week 3: Data Visualisation and Storytelling\n Week 4: Analysing & Presenting Data in R\n Week 5: Maps, tables, functions\n Week 6: Machine Learning & Analysing Clinical Tests\n Week 7: Improving Healthcare Processes & Integrating Health Data\n Week 8: Data and Identity\n Week 9: Data Ownership\n Week 10: Working with Genomic Data",
    "crumbs": [
      "Content",
      "Readings, videos and exercises"
    ]
  },
  {
    "objectID": "content/week-2/index.html",
    "href": "content/week-2/index.html",
    "title": "Overview",
    "section": "",
    "text": "This week we will delve into working with data in R, from importing data to tidying and wrangling.",
    "crumbs": [
      "Content",
      "Week 2: Data Tidying and Wrangling",
      "Overview"
    ]
  },
  {
    "objectID": "content/week-2/index.html#learning-outcomes",
    "href": "content/week-2/index.html#learning-outcomes",
    "title": "Overview",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of the week you will be able to:\n\nExplain and demonstrate use of the basic functionality of R including working with objects, operators and various data types\nImport data from various different sources\nCarry out initial exploration of your data using functions from dplyr, tidyr and ggplot2 packages\nExplain and demonstrate use of the key elements required when creating visualisations in ggplot2",
    "crumbs": [
      "Content",
      "Week 2: Data Tidying and Wrangling",
      "Overview"
    ]
  },
  {
    "objectID": "content/week-1/topic-1.html",
    "href": "content/week-1/topic-1.html",
    "title": "Topic 1: Introduction to Health Data Science",
    "section": "",
    "text": "What is data science? What kinds of data are there in the healthcare sector and what can one do with them? The purpose of this topic is to introduce you to key concepts in health data science. You will also be introduced to the course team and learn how the course works.",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Topic 1: Introduction to Health Data Science"
    ]
  },
  {
    "objectID": "content/week-1/topic-1.html#overview",
    "href": "content/week-1/topic-1.html#overview",
    "title": "Topic 1: Introduction to Health Data Science",
    "section": "",
    "text": "What is data science? What kinds of data are there in the healthcare sector and what can one do with them? The purpose of this topic is to introduce you to key concepts in health data science. You will also be introduced to the course team and learn how the course works.",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Topic 1: Introduction to Health Data Science"
    ]
  },
  {
    "objectID": "content/week-1/topic-1.html#health-data-what-why-where-and-how",
    "href": "content/week-1/topic-1.html#health-data-what-why-where-and-how",
    "title": "Topic 1: Introduction to Health Data Science",
    "section": "Health data: what, why, where and how",
    "text": "Health data: what, why, where and how\n\nWhat is health data\nHealth data refers to any kind of data related to health conditions, reproductive outcomes, causes of death and quality of life for an individual or population. This includes biometric information, prescription data, diagnoses and screening test results, as well as data about hospital visits or sleeping and exercise patterns. There is a shift lately in thinking more broadly about health, and in addition to clinical data, this also includes environmental (e.g. pollution levels), socioeconomic (e.g. income level) and lifestyle information. In fact, it is not uncommon nowadays to consider things that are not traditionally associated with health, such as social media posts (e.g. researchers have used data science methods to detect signs of depression in tweets). In this course, we will adopt such an open-minded view of health data.\n\n\nSources of health data\nThere are lots of different sources of health data. Clinical data is produced in hospitals and it is stored in hospital information systems, picture archiving and communication systems, laboratory databases, etc. Clinical data is also produced in primary care (e.g. GP practices in the UK) and stored in local systems. \nBiomedical research data, such as clinical trial data, is produced by academia and pharmaceutical companies and it is stored in databases and libraries. \nHealth business data (e.g. around accounting, billing, management, etc.) is produced by healthcare providers, insurance companies and other organisations, and is typically stored in local information and transaction systems. \nFinally, there is a growing volume of patient-generated data. This includes data produced by wearable devices (e.g. activity trackers that capture data including heart rate, steps and calories) and web-based apps and platforms (e.g. self-management platforms for conditions like diabetes or cancer), among others. This data is typically stored on the cloud or in local databases of the corresponding companies. One of the challenges in health data science is that data currently sits in silos. This means that data from different sources is not integrated. In fact, even data within a single healthcare provider is often fragmented and not joined up.\n\n\nHealth data levels\nHealth data can be captured at different levels, from the microscopic world (e.g. genomics, epigenomics, metagenomics, proteomics, metabolomics) to individuals (e.g. data captured in electronic patient records) and populations (e.g. data about disease spreading across different communities). The data published on the WHO Coronavirus Disease (COVID-19) Dashboard is an example of population-level data. \nA large volume of data is produced at all these levels. For example, we estimate many terabytes of genomic data for each individual. Considering the size of the world population, this is really “big data”. Data generated by sensors in wearable devices is also very big, as they continuously generate data. Medical imaging data (e.g. X-rays) are also very heavy, making it challenging to store and computationally expensive to analyse.\n\n\nData forms\nHealth data comes in lots of different forms, from highly structured to unstructured data. Relational databases e.g. in hospital information systems provide a clear structure to data captured. You can think of a relational database as a collection of tables with rows and columns and links between them (e.g. you could have a Patient table containing demographic information about thousands of patients, a Hospital table with key information about different hospitals in Scotland, and an Admissions table with information about hospital admissions while pointing to the other two tables). \nData captured in spreadsheets also has some structure, but very often there is redundancy or duplication of information captured. \nEven less structure is present in clinical notes, which is natural language data, or in medical images. The lack of clear structure in the way this data is captured makes it harder to analyse and make sense of in an automated fashion. It is also very important to note that the choice of a data representation paradigm, and its underlying structure or absence of, can play a key role in data integration and linkage.\n\n\nBenefits of analysing data\nAnd why is it important to analyse health data? Learning more from data can contribute to important discoveries that allow us to better understand disease and improve the way we deliver care. This includes improved diagnostics, better decision-making and more effective predictions, among others.",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Topic 1: Introduction to Health Data Science"
    ]
  },
  {
    "objectID": "content/week-1/topic-1.html#data-science-data-analytics",
    "href": "content/week-1/topic-1.html#data-science-data-analytics",
    "title": "Topic 1: Introduction to Health Data Science",
    "section": "Data Science & Data Analytics",
    "text": "Data Science & Data Analytics\nWatch the following 2 videos to find out what data science is, and what people mean when they use the term “data analytics”.\n\n\n\nData Science & Data Analytics videos",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Topic 1: Introduction to Health Data Science"
    ]
  },
  {
    "objectID": "content/week-1/topic-1.html#precision-medicine-and-stratified-healthcare",
    "href": "content/week-1/topic-1.html#precision-medicine-and-stratified-healthcare",
    "title": "Topic 1: Introduction to Health Data Science",
    "section": "Precision Medicine and Stratified Healthcare",
    "text": "Precision Medicine and Stratified Healthcare\nPrecision medicine is an emerging field and it is transforming the medical approach to disease treatment and prevention. It focuses on identifying the most effective strategy for each patient, based on genetic, environmental, and lifestyle factors.\nThe ability to characterise individuals much more precisely then allows us to identify key differences across human populations and to act accordingly in healthcare provision – this is stratified healthcare. So, one can consider stratified healthcare and precision medicine to go hand-in-hand.\nHealth data science is a key enabler to the development of precision medicine and stratified healthcare. By bringing different types of data together for each patient, we can take a more personalised approach to therapies, tailoring them to suit each individual. This is a rapidly changing environment, and a very exciting one!",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Topic 1: Introduction to Health Data Science"
    ]
  },
  {
    "objectID": "content/week-1/index.html",
    "href": "content/week-1/index.html",
    "title": "Overview",
    "section": "",
    "text": "Welcome to the course! This week you will be introduced to key concepts in health data science. We’ll also cover basic R operators and an intro to RMarkdown. You will also get to know your classmates and your lecturer in the live sessions on Thursday and Friday.",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Overview"
    ]
  },
  {
    "objectID": "content/week-1/index.html#learning-outcomes",
    "href": "content/week-1/index.html#learning-outcomes",
    "title": "Overview",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nBy the end of the week you will be able to:\n\nDescribe different examples of data in healthcare\nSummarise key phases in the data science process\nExplain genome sequencing concepts and compare different methods in sequence analysis\nUse some basic R functions\nKnow what RMarkdown is\nUnderstand how to approach errors in code\n\n\nStructure of this week’s materials\n\nIntroduction to Health Data Science: 2 videos, 2 readings\nGenomic Data: 4 videos\nRole of Ethics in Health and Social Care: 1 reading \nGetting started with R:",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Overview"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Science for Health and Biomedical Sciences",
    "section": "",
    "text": "Data science is revolutionising how medicine is understood, how biomedical research is conducted and how healthcare is delivered. Despite the widely-recognised opportunities that data can bring to biomedicine and healthcare, there is a shortage of data skills in the healthcare sector. This course aims to equip honours students with the key foundations and data skills that are needed for data-driven innovation.\n\n\nBIME10076 • Autumn 2025Deanery of Biomedical SciencesCollege of Medicine and Veterinary Medicine"
  },
  {
    "objectID": "course-information/timetable.html",
    "href": "course-information/timetable.html",
    "title": "Timetable",
    "section": "",
    "text": "You can find class times for this course via your University of Edinburgh calendar (links open in a new window):\n\nView your calendar in Office 365\nInformation about Student Timetables\n\nTODO: Add this years course timetable PDF"
  },
  {
    "objectID": "course-information/library-resources.html",
    "href": "course-information/library-resources.html",
    "title": "Library Resources",
    "section": "",
    "text": "Resource List\nThis is the Library’s online reading list tool. It links to any Resource List associated with this course and provides access to key readings. If you would like some guidance on using your Resource List, have a look at this video \n\n\nSubject Guide\nSubject Guides help you get the best out of the Library with information on finding academic literature, referencing and more.\n\nMedicine Subject Guide\nLiterature review & study skills resources for intercalating medical students Subject Guide\n\n\n\nDiscoverEd\nUse DiscoverEd to search the Library’s collections and find books, ebooks, ejournal articles and more. Use your University login to sign into your account and manage loans, requests and fines.\n\n\nInterLibrary Loans (ILL)\nIf the University of Edinburgh does not hold the material you need, you can use the InterLibrary Loans (ILL) service to request access to resources held in other libraries. Use the link, ‘InterLibrary Loan Request’ at the top of DiscoverEd. More information about ILL \n\n\nRequest a Book (RaB)\nYou can use the Library’s Request a Book (RaB) service to request purchase of books and other resources to be added to the Library collections to support your University study and research. More information about RaB \n\n\nScan & Deliver\nThis is the Library’s scan on demand service. Scan & Deliver provides scans of chapters or extracts of print items held at all University of Edinburgh Libraries (copyright restrictions apply). Use DiscoverEd to make a request. More information about Scan & Deliver"
  },
  {
    "objectID": "course-information/welcome.html",
    "href": "course-information/welcome.html",
    "title": "Welcome and Learning Outcomes",
    "section": "",
    "text": "Welcome!\nIn this course you will be introduced to data science techniques used in health and biomedicine, you’ll have a chance to practice these techniques in R, and you’ll learn about the social and societal issues surrounding the increased use of data science in human health. The course will be taught in a flipped classroom format: each week, you will be given a set of videos and readings to go through at home, and in the live sessions on Thursdays and Fridays we’ll discuss and practice what you learned from those materials. It is therefore crucial that you do complete the required preparation work before class; otherwise, you will not be able to fully participate.\nThe course materials have been prepared for you by various staff from the Usher Institute and the wider College of Medicine and Veterinary Medicine. The two weeks focused on data ethics will be delivered in collaboration with two experts in this topic: Dr Kevin Guyan from the Business School and Dr Max Perry from the School of Social and Political Science.\nWe look forward to working with you!"
  },
  {
    "objectID": "course-information/welcome.html#learning-outcomes",
    "href": "course-information/welcome.html#learning-outcomes",
    "title": "Welcome and Learning Outcomes",
    "section": "Learning Outcomes",
    "text": "Learning Outcomes\nOn successful completion of this course, you should be able to:\n Apply a range of specialised data science techniques to different medical and healthcare scenarios.\n Analyse health and biomedical data with the use of the R programming language, including summarisation, visualisation and interpretation.\n Critically examine the ethical, societal and regulatory principles and implications of data science in health.\n Explain and critically discuss key concepts, principles and methods of data science in health."
  },
  {
    "objectID": "content/week-1/topic-4.html#installing-r-rstudio",
    "href": "content/week-1/topic-4.html#installing-r-rstudio",
    "title": "Topic 4: Getting Started with R",
    "section": "",
    "text": "In case you don’t already have R and RStudio installed, follow the instructions here to get set up. If you already have R and RStudio installed, you can skip this.",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Topic 4: Getting started with R"
    ]
  },
  {
    "objectID": "content/week-1/topic-4.html#r-and-rstudio-recap",
    "href": "content/week-1/topic-4.html#r-and-rstudio-recap",
    "title": "Topic 4: Getting Started with R",
    "section": "R and RStudio recap",
    "text": "R and RStudio recap\nNow that you have access to RStudio you can start using it to experiment with the exercises we cover this week. Throughout the materials, there are chunks of code for you to run. Try copying the code from these chunks directly into RStudio to reproduce the examples and continue your explorations. It is through experimentation that we learn most effectively.\nAs a quick reminder, the image below shows you where to go to open up a new script in RStudio. Then you can start writing your own code and running it.\n\n\n\nOpen a new script in RStudio\n\n\n\nGetting Help\nRStudio has a built-in Help tab. To use the Help tab, move your cursor to something in your code and press F1 - this will show you the definition and some examples.\nThe Help tab is only really useful if you already know what you are looking for but can’t remember how it worked exactly. For finding help on things you have not used before, it is best to Google it. R has about 2 million users so someone somewhere will have had the same question or problem.\n\n\nStarting with a Blank Canvas\nWhen we import data, R remembers the data and stores it in the Environment tab. But this is not really where our data lives. For anything important that we want to load in and save, we write the code in our scripts so that we can bring back the data and objects into our environment whenever we want to by rerunning it - reproducibility in action!\nIt’s good practice to clear out our environment frequently, and always before starting new work (a bit like spring cleaning) to make sure there are no old objects we no longer need cluttering up space. If we didn’t clear the environment, we might accidentally end up using older data we thought had been updated.\nTo clear our environment we Restart R and it only takes a second!\nTo restart R you can do one of the following:\n\nUse the keyboard shortcut Ctrl+Shift+F10\nUse the dropdown menu Session -&gt; Restart R\n\n————–\nNote: RStudio has a default option for saving your environment, but that is not best practice anymore. Make sure that you have changed to the following setting (you only need to do this once):\nGo to Tools -&gt; Global Options -&gt; General and set “Save .RData on exit” to Never. This does not mean you can’t or shouldn’t save your work in .RData/.rda files, but it is best to do it consciously and load exactly what you need to load, rather than letting R always save and load everything for you, as this could also include broken data or objects.\n\n\nKeyboard Shortcuts\nHere are some of the main keyboard shortcuts in R you may find useful to begin with:\n\n\n\n\n\n\n\n\nI want to…\nWindows\nMac\n\n\n  Restart R Session\nCtrl+Shift+F10\nCmd+Shift+F10\n\n\n  Run current line/selection\nCtrl+Enter\nCmd+Enter\n\n\n  Run the whole script\nCtrl+Shift+S\nCmd+Shift+S\n\n\n  Insert %&gt;%\nCtrl+Shift+M\nCmd+Shift+M\n\n\n  Reformat selection\nCtrl+Shift+A\nCmd+Shift+A\n\n\n  Comment/uncomment (multiple)       lines of code\nCtrl+Shift+C\nCmd+Shift+C\n\n\n  Open up Help tab on function\nF1\nF1 \n\n\n  Go to the end of the document\nCtrl + End\nCmd + down arrow\n\n\n\n\n\nProjects\nRStudio has a great way of helping you to keep all your analysis files together so that R can access them easily. You can do this by creating an RStudio project for each of your data analysis projects. The following video shows you how (switch to full screen to see the video better):\n\n\n\nRStudio projects\n\n\n\n\nHow does R work?\nWhen using R, you will predominantly be working with your own data which you must first load in before you can start exploring it, and we’ll be covering how to do this in-depth in the next topic. But to begin with, let’s see how R works.\nNow that you have RStudio up and running, try copying the code from above these boxes and running them yourself in a new script.\nCan you remember what the # symbol does?\n\n# R is like a calculator\n7 + 3\n\n[1] 10\n\n\nThe # symbol allows us to add comments by letting R know not to run this line of text as R code.\nWhat if we want to save the value of this calculation to refer to at a later date?\n\n\nAssignment Operators\nTo save our value, we have to create an object, a, and then assign the value to the object using the = sign or alternatively, you could use these &lt;- symbol. They are both called assignment operators. In R there are often multiple ways of doing the same thing as you will continue to discover, and which you choose often depends on personal preference.\nMy preference is for the &lt;- because (a) it shows the direction of assignment (right to left) and (b) is distinct from = which can also be used within functions for specific arguments. But both work!\nTry adding and running the following code in your script. Why do you think we have to type a again on its own underneath?\n\n  # assign the results of our calculation to an object \"a\"\n  a &lt;- 7 + 3 \n  # print out the result\n  a \n\n[1] 10\n\n\nIt’s always worth remembering that in R:\n\nif you save an object, then the value does not get printed (displayed on the screen)\nif you print an object, then the value does not get saved\n\nIn our example above, the equals &lt;- sign tells R to give the object on the left of the sign the value of whatever is on the right of the sign, and the value gets saved. Underneath, where only a is typed, we are also printing it so that you can see the result. In this code chunk, we are both saving and printing.\nBut in our first example, there was no &lt;- sign so we were only printing the value, not saving it too.\nNote: When working in RStudio, when you save a value to an object it will appear in the Environment tab. If you haven’t given your values or data a name using an assignment operator, it won’t appear in the Environment tab.\n\n\nA Quick Aside on Names in R…\nYou can name objects in R anything that you like… well almost anything. There are a few rules about names in R:\n\nNo spaces - spaces inside a name are not allowed (the spaces around the &lt;- don’t matter):\nlucky_number &lt;- 5 ✔ lucky number &lt;- 5 ❌\nNames must start with a letter:\nlucky_number &lt;- 5✔1lucky_number &lt;- 5` ❌\nCase sensitive:\nlucky_number is different from Lucky_Number\nReserved words - there is a set of words you can’t use as names, including: if, else, for, in, TRUE, FALSE, NULL, NA, NaN, function (Don’t worry about remembering these, R will tell you if you make the mistake of trying to name a variable after one of these).\n\nFor more information on naming objects in R, check out this blog post.\n\n\nArithmetic Operators\nLet’s go one step further and save each of the values in our previous calculation ( 7 + 3 ) as objects too.\nIn the code chunk below you will see that we’ve added some more calculations. These include the most basic arithmetic operators we’ll be using and as you can see, R uses standard symbols.\nWhy might we want to save each of our values as objects first?\n\n# assign the values \"7\" and \"3\" to objects \"b\" and \"c\"\nb &lt;- 7\nc &lt;- 3\n\n# arithmetic operators\nadd_opr       &lt;- b + c\nsubtract_opr  &lt;- b - c\nmultiply_opr  &lt;- b * c\ndivide_opr    &lt;- b / c\n\n# print out the results\nadd_opr\n\n[1] 10\n\nsubtract_opr\n\n[1] 4\n\nmultiply_opr\n\n[1] 21\n\ndivide_opr\n\n[1] 2.333333\n\n\nSaving our values as objects allows us to carry out various calculations using one set of saved values. If we want to change the value of b or c, we can do so without having to change the values in all subsequent calculations too.\nWhy not try it just now? Change the value of b to 9 ( b &lt;- 9 ) and rerun the chunk to see your updated results.\nRemember, the name on the left of the &lt;- is the object name. Now change the name of one of the objects, but make sure you also change the name in the code for printing the results too.\nAll of R is just an extension of these types of processes: applying more complex functions (calculations) across more complex objects.\nIt’s important to appreciate that objects can be more than just single numbers. They can be entire spreadsheets, which in R tidyverse are known as tibbles. These are the types of objects you will predominantly be working with when analysing healthcare data.\nYou can find further examples of the arithmetic/mathematical operators in R via the introverse package documention.\n\n\nRelational or Comparison Operators\nAs well as performing calculations with arithmetic operators, you can also ask R things, such as is “2 greater than 10?”. In such cases, as you are asking R a questions, the output returned (or answer) is TRUE or FALSE. Another set of operators you will use frequently in R are relational operators, which are great for comparing values and for creating subgroups in your data or excluding outliers.\nNote: You can find a full list of the operators we use on the HealthyR Quick-start cheatsheet, also listed in Further Resources) for this week.\nThese operators allow us to ask questions about our data. For example, are values in a column greater than, less than or equal to a reference value?\nThe symbols used by different programs and languages for logical operators vary more widely than for arithmetic operators, let’s see what R uses, examples are shown in the following code chunk:\n\n# Assign values to \"x\" and \"y\"\nx &lt;- 3\ny &lt;- 7\n\n# Greater than\n2 &gt; 10\n\n[1] FALSE\n\n# Less than\nx &lt; y\n\n[1] TRUE\n\n# Equal to\nx == y\n\n[1] FALSE\n\n# Not equal to\nx != y\n\n[1] TRUE\n\n# Greater than or equal to\nx &gt;= 3\n\n[1] TRUE\n\n# Less than or equal to\n4 &lt;= x\n\n[1] FALSE\n\n\nThe == is very easily and commonly confused with the =. If you get an error when trying to compare values to see if they are equal, there is a good chance you have forgotten to put in the extra =.\nPrinting out a TRUE or FALSE value might seem a bit obscure, but these relational or comparison operators are really useful for filtering data and we’ll use them frequently throughout this course.\n\nLogical Operators\nA final set of operators that you will find useful when working with data in R is the logical set of operators. These work in a very similar way to the relational operators: R compares values and returns TRUE or FALSE as the output. You can think of logical operators are asking R to compare 2 or more things. \nYou can find further examples of the logical operators in R via the introverse package documentation.\nLet’s see how this works:\n\n  # assign multiple values to the object \"year\" \n  year &lt;- c(2000, 2001, 2002, 2003, 2004)\n \n  # check \"year\" values to see if they are equal to 2000 OR 2001 \n  year == 2000 | year == 2001\n\n[1]  TRUE  TRUE FALSE FALSE FALSE\n\n  # | for \"OR\"\n  year_subset1 &lt;- year == 2000 | year == 2001\n  year_subset1\n\n[1]  TRUE  TRUE FALSE FALSE FALSE\n\n  # & for \"AND\" \n  year_subset2 &lt;- year &gt; 2001 & year &lt; 2003\n  year_subset2\n\n[1] FALSE FALSE  TRUE FALSE FALSE\n\n  # ! for \"NOT\" \n  year_subset3 &lt;- !year == 2002\n  year_subset3\n\n[1]  TRUE  TRUE FALSE  TRUE  TRUE\n\n\n\n\n\nData Types\nLike many other types of analysis, database, or spreadsheet software, R needs to know what the variable type (or data type) of each column is. The types we’ll be using most frequently are characters, factors, and numbers.\nCharacters\nCharacters (sometimes referred to as strings or character strings) in R are letters, words, or even whole sentences (an example of this might be free text comments). We can convert objects or values to character data type using the function as.character(). Characters are displayed in-between \"\" (or '').\nFactors\nFactors can be thought of as slightly fussy characters. They’re fussy because they have something called levels. Levels are all the unique values this variable could take e.g. if we have a column with data on sex, there might be two levels, “Male” and “Female” or there might be three levels if there was an option to specify “Other” too. Using factors rather than just characters can be useful because:\n\nThe values that factor levels can take is fixed. For example, if the predefined levels of your column called sex are “Male” and “Female” and you try to add a new patient where sex is just called “F” sex was stored as a character data type rather than a factor, R would have no problem with this and you would end up with “Male”, “Female”, and “F” in your column.\nLevels have an order. By default, R sorts things alphabetically, but if you want to use a non-alphabetical order, e.g. if we had a body_weight variable where we want the levels to be ordered - “underweight” - “normal weight” - “overweight” - we need to make body_weight into a factor. Making a character column into a factor enables us to define and change the order of the levels.\n\nThese are huge benefits, especially as a lot of medical data analyses include the comparison of different risks to a reference level.\nNumbers\nIn R, we specify numbers using the as.numeric() function. Sometimes numerics are further differentiated based on whether they have decimal places or not. Integer stands for a number without decimal places, whereas double would have decimal places.\nDate\nDates can be confusing, they can appear in many different formats, and in R they can look very similar to the character data type because they too are displayed between inverted commas ( \"\" ). Once we let R know that our variable is a date however, it can do some clever things as we’ll discover later.\nYou can find out more about how R reads in dates and also more examples on all these other data types by going to Chapter 2.2 in R for health data analysis.",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Topic 4: Getting started with R"
    ]
  },
  {
    "objectID": "content/week-1/topic-4.html#practice-time",
    "href": "content/week-1/topic-4.html#practice-time",
    "title": "Topic 4: Getting Started with R",
    "section": "Practice Time!",
    "text": "Practice Time!\n\nIn your RStudio, open a new script and do the following:\n\n\nCreate 2 new variables, x, y, with values 3, 10.\nCarry out a calculation using these variables (e.g. x+y).\nSave the value to an object called calc.\nPrint out the value of the variable to view the output.\n\n\nIn the same script, create a new variable called z and assign it the value of 5. Then create a new variable called calc2 and assign it the value of calc + z. Print out the value of calc2 to view the output.\nCreate a new variable called calc3 and assign it the value of calc2 - calc. Print out the value of calc3 to view the output.\nCreate a new variable called calc4 and assign it the value of calc3 * calc2. Print out the value of calc4 to view the output.",
    "crumbs": [
      "Content",
      "Week 1: Introduction",
      "Topic 4: Getting started with R"
    ]
  }
]